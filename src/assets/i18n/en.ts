export const en = {
  common: {
    followers: 'Subscribers',
    releaseToRefresh: 'Release to refresh',
    beingRefresh: 'Refreshing...',
    cancel: 'Cancel',
    ok: 'OK',
    confirm: 'Confirm',
    des: 'Clear <strong>all cached data</strong>!!!',
    des1: 'Confirm New Channel',
    server: 'Publisher Account DID',
    description: 'Description',
    feeds: 'Feeds',
    just: 'Just now',
    yesterday: '1d',
    unsubscribe: 'Unsubscribe',
    share: 'Share',
    addressinvalid: 'Address invalid',
    comingSoon: 'Coming soon...',
    noImageSelected: 'No image selected',
    loggingIn: 'Signing in',
    des2: 'Are you sure you want to return to the main page？',
    connectionError: 'Network error, please try again later',
    success: 'Transfer successful',
    fail: 'Transfer unsuccessful',
    unknownError: 'Unknown error',
    loadingText: 'Loading additional data…',
    noElaAddress: 'Channel owner has not set up an ELA address yet',
    copysucceeded: 'Copied',
    des4: 'Your donation will be sent to this ELA address:',
    amountError: 'Incorrect amount',
    waitMoment: 'Please wait...',
    // issuecredentialError: 'There was an error issuing the certificate. Please check the QR code or try again',
    save: 'Save',
    channel: 'Channel',
    image: 'Image',
    nochanges: 'No changes made',
    duplicate: 'You are not allowed to create a Tweet with duplicate content.',
    editpost: 'Edit Post',
    removepost: 'Delete Post',
    editcomment: 'Edit Comment',
    removecomment: 'Delete Comment',
    edit: '( edited )',
    deleted: '(post deleted)',
    promptPublishDidError: 'DID publication error',
    resolveDidDocumentError: 'Resolve DID Document error',
    cdeleted: '(comment deleted)',
    sharepost: 'Share Post',
    shareChannel: 'Share Channel',
    error400: 'Absent required parameter error',
    error500: 'Server error',
    confirmdeletion: 'Are you sure you want to delete this post?',
    waitOnChain:
      'Tips - the DID of the Feeds Publisher Account is being published. Please wait for full confirmation from the DID Sidechain.',
    takePicture: 'Take Picture',
    photolibary: 'Photo Library',
    signedInto: 'Signed In',
    successfully: 'Successfully',
    followed: 'Subscription added',
    unfollowed: 'Unsubscribed',
    filevideodes: 'Video playback length exceeds 15-second limit',
    videoloading: 'Uploading...',
    theFeedSource: 'Feeds Publisher Account',
    fulltext: 'Read more',
    uploading: 'Uploading',
    downloading: 'Downloading',
    mustUpdate: 'Your Feeds service is out-dated. Please upgrade to the latest version.',
    downDes: 'There is an instant file being downloaded, please wait for that download to complete and try again',
    loadingLastestComment: 'Loading latest comments',
    showless: 'show less',
    showmore: 'show more',
    // didnotrelease: 'Feeds will work normally after a DID is published on-chain',
    unknown: 'Unknown',
    channelAlreadyAdded: 'You have already subscribed to this channel',
    notFollowYet: 'Subscribe',
    httperror: 'Service exception, try again later',
    textcopied: 'Copied to clipboard',
    connectionError1: 'This channel is currently offline. Try again later.',
    // emptyElaAddressDes: 'Not set yet',
    qRcodePreview: 'QR code Preview',
    details: 'Details',
    sending: 'sending',
    sendFail: 'Send failed',
    retry: 'Retry',
    sendingTip: 'This post is being sent, try again later',
    currentPostError: 'Current post is in error',
    sendingErrorTip: 'After the post is sent successfully, please try again.',
    preferences: 'Preferences',
    posts: 'Posts',
    confirmDialog: 'Confirm Dialog',
    deletePost: 'Delete Post',
    deleteComment: 'Delete Comment',
    confirmdeletion1: 'Are you sure you want to delete this comment?',
    bindingCompleted: 'Binding Completed!',
    error: 'Error',
    transMsgTimeout: 'The server is not responding. Please try again later.',
    advancedSettings: 'Advanced Settings',
    normalSettings: 'Normal Settings',
    scannerPrompt: 'Place a QR code inside the scan area',
    obtain: 'Obtain',
    deleteReply: 'Delete Reply',
    confirmdeletion2: 'Are you sure you want to delete this Reply?',
    quantity: 'Quantity',
    connectWallet: 'Please connect to your wallet first.',
    disconnect: 'Disconnect',
    buyNftError: 'Collectible purchase failed',
    sold: 'Sold',
    offTheShelf: 'Off the shelf',
    cancelSuccessfully: 'Cancellation successful',
    cancellationFailed: 'Cancellation failed',
    priceChangeFailed: 'Price change failed',
    publicPasarFailed: 'Sale listing failed',
    nftCreationFailed: 'NFT creation failed',
    onsale: 'On sale',
    state: 'State',
    collectibles: 'Collectibles（NFT）',
    setPropfileAvatar: 'Set your preferred avatar',
    setAvatar: 'Set avatar',
    mintSuccess: 'Create Collectible Success',
    mintSuccessDesc: 'Congratulations, you have successfully created the Collectible',
    timeout: 'Timeout',
    mintTimeoutDesc: 'Creating the Collectible timed out. You can confirm whether the Collectible was created successfully later',
    uploadingData: 'Collectible metadata is being uploaded to the IPFS network',
    uploadDataSuccess: 'Collectible metadata has been uploaded to the IPFS network',
    uploadDataFail: 'Failed to upload Collectible metadata to the IPFS network',
    mintingData: 'NFT Collectible is being created',
    mintDataSuccess: 'NFT Collectible has been created successfully',
    mintDataFail: 'Failed to create NFT Collectible',
    settingApproval: 'Waiting for authorization to delegate Collectible to Pasar',
    agreeApproval: 'Authorize the delegation of NFT Collectible to Pasar',
    disagreeApproval: 'Deny authorization to delegate Collectible to Pasar and terminate the sale process',
    creatingOrder: 'Sale order for the Collectible is now being created',
    createOrderSuccess: 'Sale order for the Collectible has been created successfully',
    createOrderFail: 'Failed to create a sale order for the Collectible',
    checkingCollectibleResult: 'Waiting for the NFT Collectible to take effect in the contract',
    checkingOrderResult: 'Waiting for the NFT Collectible sale order to take effect in the contract',
    developLog: 'Output Log',
    restartApp: 'Restart Application',
    restartAppDesc: 'The application needs to be restarted after switching network',
    disconnectWallet: 'Disconnect Wallet',
    restartAppDescForProvider: 'Need to restart app after switching provider',
    cancelingOrderDesc: 'The NFT Collectible order is being cancelled. Please wait...',
    changingPriceDesc: 'The NFT Collectible price is being updated. Please wait...',
    sellingOrderDesc: 'The NFT Collectible sell order is being processed. Please wait...',
    buyingOrderDesc: 'The NFT Collectible buy order is being processed. Please wait...',
    buyOrderTimeoutDesc: 'Buy order timeout. You can confirm whether the Collectible was successfully purchased later',
    cancelOrderTimeoutDesc: 'Cancel order timeout. You can confirm whether the Collectible was successfully cancelled later',
    changePriceTimeoutDesc: 'Update price timeout. You can confirm whether the Collectible price was successfully updated later',
    saleOrderTimeoutDesc: 'Sell order timeout. You can confirm whether the Collectible was successfully sold later',
    publishSameDataFailed: 'Publish to Pasar failed: NFT has same collectible data',
    savePicture: 'Save Collectible',
    savedSuccessfully: 'Saved successfully',
    saveFailed: 'Save failed',
    savedDes: 'Please wait. The picture is being saved',
    burnNFTs: 'Delete Collectible',
    burningNFTSDesc: 'Delete Collectibles, please wait',
    burningNFTSTimeoutDesc: 'Delete Collectibles timeout, you can confirm later',
    burnNFTSFailed: 'Failed to delete collectibles',
    exitApp: 'Press again to exit the application!',
    burnNFTSSuccess: 'Collectibles deleted successfully',
    shareReadMore: '... read more at',
    sharesharingPost: "I'm sharing a post from Feeds",
    shareSharingChannel1: "Check out this channel '",
    shareSharingChannel2: "' on Feeds",
    shareSharingChannel: 'Have a look at this channel from Feeds!',
    generateSharingLink: 'The sharing link is being generated',
    loading: 'Loading...',
    sharePasar: 'Sharing collectible ',
    parsing: 'Parsing...',
    orderCantFind: 'Collectibles cannot be found on Pasar',
    orderHasBeenSold: 'The collectibles has been sold from Pasar',
    orderHasBeenCancel: 'The collectibles has been off the Pasar',
    orderInvalid: 'Collectibles status invalid',
    internalError: 'Internal error',
    transferCollectible: 'Transfer Collectible',
    walletAddress: 'Wallet Address',
    walletAddressDes: 'Enter recipient wallet address',
    tranferNFTSDesc: 'Tranfer Collectibles, please wait',
    tranferNFTSTimeoutDesc: 'Tranfer Collectible timeout, you can confirm later',
    tranferNFTSFailed: 'Collectible transfer failed',
    tranferNFTSSuccess: 'Collectible transfer successful',
    walletAddressDes1: "The recipient's wallet address is consistent with the wallet address of the collection",
    walletAddressDes2: 'You must have at least 0.01 DIA in order to transfer collectibles.',
    didUriNull: 'Service exception, please try again later',
    parseing: 'Parseing',
    dataStorage: 'Data storage',
    cleanPasarData: 'Clear Pasar data',
    cleanPasarDataTip: 'Need to restart app after clearing Pasar data',
    unpublished: 'Unpublished',
    published: 'Published',
    queryTransactionResult: 'A transaction has been initiated and the result is being queried',
    sorry: 'Sorry',
    auction: 'This order is an auction order. Purchase is not supported temporarily',
    editedContentDes: 'Are you sure to cancel? Canceling will discard your edited content!',
    editedContentDes1: 'Confirm',
    editedContentDes2: 'Cancel',
    migrateFeedsServiceData: 'Migrate Feeds Service data to the Hive Vault',
    Subscribing: 'Subscribing...',
    subscribeSuccess: 'Subscription successful',
    subscribeFail: 'Subscription failed (please check mobile network)',
    didSigninError1: 'An error occurred when the user logged in',
    didSigninError2: 'An error occurred while parsing user data',
    yes: 'Yes',
    editChannel: 'Edit Channel',
    likeError: 'Like failed due to network exception',
    likeError1: 'Like failed, try again later',
    errorDes: 'Sorry, the application encountered an error. This has been reported to the team.',
    twitterNotLogin: 'You are not logged into Twitter. Please return to the Settings page to log in.',
    twitterExpired: 'Twitter login has expired. Please return to the Settings page to log in.',
    twitterAuthFailed: 'Twitter auth failed.',
    editPostFail: 'Edit Post failed'
  },
  app: {
    profileDetails: 'Profile Details',
    feedSources: 'Publisher Account',
    about: 'About Feeds',
    donation: 'Donation',
    signout: 'Sign out',
    des: 'Signed out',
    settings: 'Settings',
    privacyPolicy: 'Privacy Policy',
    termsOfService: 'Terms of Service'
  },
  SigninPage: {
    signIn: 'Sign In',
    feeds: 'Feeds',
    des: 'Where meaningful',
    des1: 'conversations happen',
    des2: 'Not your keys, not your data',
    des3: 'No central servers and censorship free',
    des4: 'Your data is highly secured',
    des7: 'by network of nodes',
    des8: 'No intermediaries',
    des9: 'involved in trading of assets',
    welcome: '#welcome',
    ownyourdata: 'Own your data',
    decentralized: 'Decentralization',
    secure: 'Security',
    freemarket: '#freemarket',
    learnMore: 'Learn more',
    des10: 'Web3 Social Network',
    and: ' and ',
    des11: 'By signing in, you agree to the',
    des12: 'Please select one of the following options',
    elastosEssentials: 'Elastos Essentials',
    guest: 'Sign In as Guest'
  },
  FeedsPage: {
    tabTitle1: 'Home',
    tabTitle2: 'Profile',
    tabTitle3: 'Notifications',
    tabTitle4: 'Explore',
    tabTitle5: 'Timeline',
  },
  HomePage: {
    allempty: 'Your timeline is empty',
    emptyDes: 'Add new channel or find new channels to subscribe!',
    exploreFeeds: 'Explore Feeds',
    minutesAgo: 'm',
    hoursAgo: 'h',
    daysAgo: 'd',
    onehourAgo: 'h',
    oneminuteAgo: 'm',
    name: 'Name',
    creator: 'Creator',
    owner: 'Owner',
    tokenID: 'Token ID',
    namePlaceholder: 'Search by name',
    creatorPlaceholder: 'Search by creator',
    ownerPlaceholder: 'Search by owner',
    tokenIDPlaceholder: 'Search by token ID',
    sortBy: 'Sort by',
    recentlyAdded: 'Recently Added',
    Oldest: 'Oldest',
    priceLowToHigh: 'Price: Low to High',
    priceHightoLow: 'Price: High to Low',
    search: 'Search',
    addChannel: 'Add Channel',
    createPost: 'Create Post',
    show: 'Show',
    posts: 'Posts',
  },
  ProfilePage: {
    myFeeds: 'Channels',
    following: 'Subscriptions',
    myLikes: 'Likes',
    moreinfo: 'More Info',
    collectibles: 'Collectibles',
    createCollectible: 'Create Collectibles',
    allempty: 'No collectibles found',
    emptyDes: 'Create a collectible or buy one from Pasar Lite marketplace!',
    exploreMarketplace: 'Explore Marketplace'
  },
  MyfeedsComponent: {
    allempty: 'No channels found',
    emptyDes: "Let's change that, get started with your first channel!",
    createFeed: 'Add Channel',
    exploreFeeds: 'Explore Feeds',
    des: 'channel left',
    des1: 'channel subscribed',
    des2: 'channels subscribed',
    des3: 'channels left',

  },
  FollowingComponent: {
    allempty: 'No Subscriptions Yet',
    emptyDes: 'Go and subscribe to channels you find exciting',
  },
  LikesComponent: {
    allempty: 'Nothing liked yet',
    emptyLikeDes: "See what's being posted on the timeline!",
    timeline: 'Timeline',
    exploreFeeds: 'Explore Feeds'
  },
  ConfirmdialogComponent: {
    signoutTitle: 'Sign Out',
    signoutMessage: 'Are you sure you want to sign out?',
  },
  SearchPage: {
    title: 'Channels',
    allempty: 'No channels found',
    emptyDes: 'No channels available on Explore Feeds. Please come back later!',
    follow: 'Subscribe',
    following: 'Subscribed',
    searchFeeds: 'Search',
    status0: 'Connecting',
    status1: 'Connecting',
    status2: 'Connecting',
    status3: 'Connecting',
    status4: 'Pending',
    status5: 'Connecting',
    status6: 'Pending',
    status7: 'Pending',
    status8: 'Signin error',
    status9: 'Pending',
    status10: 'Pending',
    status11: 'Pending',
    status12: 'Pending',
    status14: 'Requested',
    discover: 'Explore on Discovery Square',
    des1:
      'Your subscription request to this channel is ongoing; this takes a few seconds. Would you like to cancel this subscription？',
    confirmTitle: 'Cancel Request',
  },
  ChannelsPage: {
    feeds: 'Channel',
    tip: 'Tip',
    allempty: 'No Posts Yet',
    emptyDes: "This channel hasn't published any posts",
    noSubscription: 'No subscription',
    subscribeChannel: 'Subscribe to view posts from this channel',
    viewall: 'View all',
    allempty1: 'Channel not subscribed',
    emptyDes1: 'Subscribe to view contents from this channel'
  },
  NotificationPage: {
    allempty: 'Nothing to find here',
    emptyDes: 'Don’t worry though, all your notifications will show up here!',
    followedFeed: 'subscribed to your channel',
    likedPost: 'liked your post',
    commentPost: 'Commented on your post',
    likedComment: 'liked your comment',
    deleteNotification: 'Delete Notification',
  },
  CreatenewfeedPage: {
    createNewFeed: 'Add Channel',
    profileImage: 'Avatar',
    des: 'Select an image for your channel',
    channelSource: 'Publisher Account DID',
    name: 'Name',
    description: 'Description',
    createFeed: 'Create',
    tipMsg: 'Select an avatar',
    tipMsg1: 'Please add channel name',
    tipMsg2: 'Please add channel description',
    tipMsg3: 'Invalid parameters',
    tipMsgLength: 'Maximum description length is 128 characters',
    inputName: 'Add channel name',
    inputFeedDesc: 'Add channel description',
    createfeedsuccess: 'Channel created successfully!',
    tipMsgLength1: 'Maximum name length is 32 characters',
    alreadyExist: 'Channel already exists. Please change name and try again',
    nameContainInvalidChars:
      'Channel Name cannot include characters except alphabet letters A-Z, a-z, digits 0-9, hyphen “-”, and underscore “_”.',
    feedMaxNumber: '5 channels may be created at maximum',
    // feedNum: 'You can create up to 5 channels',
    des1: 'Show channel in the Explore Feeds for users to discover.',
    tippingAddress: 'Tipping Address',
    tippingAddressDes: 'Enter tipping address',
  },
  ProfileimagePage: {
    title: 'Choose Avatar',
    confirm: 'Confirm',
    avatarEorr: 'GIF file type is not supported. Please select again.'
  },
  ProfiledetailPage: {
    profileDetails: 'Profile Details',
    name: 'Name',
    did: 'DID',
    telephone: 'Phone Number',
    email: 'Email',
    location: 'Location',
    didinfo: 'DID Info',
    publisheraccount: 'Publisher Account',
    collections: 'Collectibles',
    basicAccount: 'Basic Account',
    features: 'Features',
    features1: '● Buy and sell Collectible',
    features2: '● Read posts from subscribed channels',
    features3: '● Comment on posts',
    features4: '● Create up to 5 channels',
    features5: '● Publish unlimited posts',
    features6: '● Publish NFT sale to subscribers',
    upgradeToPublisherAccount: 'Upgrade to Publisher Account'
  },
  DevelopPage: {
    develop: 'Develop',
    clearAllData: 'Clear All Data',
  },
  AboutPage: {
    about: 'About Feeds',
    version: 'Version',
    website: 'Website',
    disclaimer: 'Disclaimer(Feeds)',
    disclaimerNft: 'Disclaimer(Pasar Lite)',
    help: 'Feeds dApp manual',
    email: 'Email',
    telegram: 'Telegram',
  },
  PostdetailPage: {
    postview: 'Post View',
  },
  AddServerPage: {
    tipMsg: 'Possible URL error',
    feedsSource: 'Feeds Publisher Account : ',
    serverWentOffline: ' went offline.',
    serverAlreadyAdded: 'This Feeds Publisher Account has already been added.',
    scanimg: 'Import QR code from Picture',
    tipMsg1: 'No QR code found',
  },
  ServerInfoPage: {
    title: 'Publisher Account Details',
    online: 'Online',
    users: 'Users',
    offline: 'Offline',
    name: 'Name',
    owner: 'Owner',
    introduction: 'Description',
    did: 'DID',
    deleteFeedSource: 'Delete Publisher Account',
    DeletethisFeedSource: 'Delete Publisher Account',
    cancel: 'Cancel',
    RemovethisFeedSource: 'Remove this Feeds Publisher Account',
    removeserver: 'Feeds Publisher Account Service removed',
    feedsSourceQRCode: 'Publisher Account QR Code',
    public: 'Private',
    replyingto: 'Replying to',
    containedfeeds: 'Contained Channels',
    version: 'version',
    beingPublic: 'Public',
    des1: 'When developer mode is opened, you can choose public or public test Channel',
    des2: 'Test Channel',
    des3: 'Public Channel',
    feedsSourceQRCodeDes:
      "This QR Code is only limited to your personal use. It's used to bind your publisher account on other devices",
    elaaddress: 'ELA Address',
    serverDes: 'Description',
    serverName: 'Name',
    inputName: 'Enter Publisher Name',
    inputServerDes: 'Enter Publisher Description',
    inputElaAddress: 'Enter ELA Address',
  },
  CreatenewpostPage: {
    post: 'Post',
    des: "What's happening?",
    addingPost: 'New Post',
    tipMsg: 'Please enter a message!',
    tipMsg1: 'Your post has been sent successfully.',
    tipMsg2: 'Video processing',
    twitterDes: 'Post to Twitter',
    twitterDes1: 'Currently, only text format is supported. Any images or videos will not be posted to Twitter.'
  },
  DIDdata: {
    Notprovided: '',
    NotprovidedfromDIDDocument: 'Information is being obtained',
    NoDescription: 'Add Description',
  },
  CommentPage: {
    publishComment: 'Post Reply',
    inputComment: 'Leave a comment',
    tipMsg1: 'Commented',
  },
  DisclaimerPage: {
    title: 'Disclaimer',
    declaration: 'By clicking “I agree”, you hereby accept and agree to our Terms below.',
    copyright:
      'Feeds is owned and operated by Trinity Tech Co., Ltd. and its affiliates (“Trinity”, “we”, or “us”), and you agree to abide by the specific terms for the Feeds application below (collectively our “Terms”).',
    bodyText:
      'By using our Feeds application, its content, and services (the “App”), you agree to be solely responsible for your use of the App and any content you post and provide, including compliance with applicable laws, rules, and regulations. You should only post and provide content that you are comfortable sharing with others. You must be at least 13 years old to use the App or no longer considered to be a minor in your jurisdiction (ie. state, providence or country).  We do not endorse, support, represent, or guarantee the completeness, truthfulness, accuracy, or reliability of any content on the App. You hereby acknowledge that you may be exposed to harmful, inaccurate, or inappropriate content while using the App.',
    acceptText: 'Accept',
    denyText: 'Cancel',
  },
  DonationPage: {
    donation: 'Donation',
    donate: 'Donate',
    description:
      'The Feeds Capsule is a non-profit project dedicated to improving user experience and integrating Essentials features into elastOS. All donations contributed to the Feeds project are greatly appreciated, and will better enable us to deliver on our mission as we develop new functions and features for our upcoming releases.',
    receiver: 'Receiver',
    amount: 'Amount',
    enterAmount: 'Enter ELA Amount',
    memo: 'Memo',
    defaultMemo: 'Donate to Feeds project',
    supportFeeds: 'Support Feeds',
    elaAddress: 'ELA Address',
    channelName: 'Channel Name',
  },
  GalleriahivePage: {
    title: 'Log in to Hive',
    // titleSuccess: 'logged in to Hive',
    description:
      'Waiting for Essentials authorization to log in to Hive Node, please wait....',
    buttonTitle: 'start',
    synchronizingData: 'Synchronizing data',

    preparingData: 'Preparing data',
    creatingScripting: 'Creating scripting',
    synchronizingChannelData: 'Synchronizing channel data',
    synchronizingPostData: 'Synchronizing post data',
    synchronizingCommentData: 'Synchronizing comment data',
    synchronizingOtherData: 'Synchronizing other data',

    synchronizingComplete: "The synchronization is complete, Let's go",
    buttonTitle1: 'Try again',
    welcomeHive: "Let's go",
    titleFail: 'Failed to log in to hive',
    failDes0: 'Essentials authorization login hive failed',
    failDes1: 'Please check the mobile network',
    failVaultNotFound: 'Please enable Hive storage',
    authorization: 'Authorization',
    description1: 'Connecting to Hive node...',
    authorized: 'Authorized',
    description2: 'Successful login to Hive node!'
  },
  ErrorInfo: {
    alreadyExists: 'Entity Already Exists',
    notExists: 'Entity Does Not Exist',
    notAuthorized: 'Operation Not Authorized',
    wrongState: 'Operation In Wrong State',
    tokenExpired: 'Access Token Expired',
    internalError: 'Server Internal Error',
    invalidParam: 'Invalid Parameters',
    invalidChallengeResponse: 'Invalid Challenge Response',
    invalidVerifiableCredential:
      'Invalid Verifiable Credential. Please check your DID on the DID Sidechain.',
    unsupportedRequests: 'Unsupported requests',
    needUpdateServerVersion: ' Version is Outdated',
    UnknownError: 'Unknown Error',
    UnimplementedError: 'Unimplemented Error',
    NotFoundError: 'Not Found Error',
    InvalidArgument: 'Invalid Argument',
    PointerReleasedError: 'Pointer Released Error',
    DevUUIDError: 'Device UUID Error',
    FileNotExistsError: 'File Does Not Exist Error',
    CreateDirectoryError: 'Create Directory Error',
    SizeOverflowError: 'Size Overflow Error',
    StdSystemError: 'Std System Error',
    OutOfMemoryError: 'Server Out Of Memory Error',
    DidNotReady: 'Not Ready',
    InvalidAccessToken: 'Invalid Access Token',
    NotAuthorizedError: 'Authorization Error',
    CarrierSessionInitFailed: 'Carrier Session: Init Failed',
    CarrierSessionConnectFailed: 'Carrier Session: Connect Failed',
    CarrierSessionCreateFailed: 'Carrier Session: Create Failed',
    CarrierSessionAddStreamFailed: 'Carrier Session: Add Stream Failed',
    CarrierSessionTimeoutError: 'Carrier Session: Timeout Error',
    CarrierSessionReplyFailed: 'Carrier Session: Reply Failed',
    CarrierSessionStartFailed: 'Carrier Session: Start Failed',
    CarrierSessionBadStatus: 'Carrier Session: Bad Status',
    CarrierSessionDataNotEnough: 'Carrier Session:Not Enough Data',
    CarrierSessionUnsuppertedVersion: 'Carrier Session: Unsupported Version',
    CarrierSessionReleasedError: 'Carrier Session: Released Error',
    CarrierSessionSendFailed: 'Carrier Session: Send Failed',
    CarrierSessionErrorExists: 'Carrier Session: Error Exists',
    MassDataUnknownReqFailed: 'MassData: Unknown Request Failed',
    MassDataUnmarshalReqFailed: 'MassData: Unmarshal Request Failed',
    MassDataMarshalRespFailed: 'MassData: Marshal Response Failed',
    MassDataUnsupportedVersion: 'MassData: Unsupported Version',
    MassDataUnsupportedAlgo: 'MassData: Unsupported Algo',
    STREAM_STATE_DEACTIVATED: 'Stream State: Deactivated',
    STREAM_STATE_CLOSED: 'Stream State: Closed',
    STREAM_STATE_ERROR: 'Stream State: Error',
    WRITE_DATA_ERROR: 'Write Data Error',
    SESSION_CREATE_TIMEOUT: 'Session: Create Timeout',
    SESSION_NEW_SESSION_ERROR: 'Session: New Session Error',
    SESSION_ADD_STREAM_ERROR: 'Session: Add Stream Error',
    SESSION_REQUEST_ERROR: 'Session: Request Error',
    SESSION_START_ERROR: 'Session: Start Error',
    HIVE_ERROR_507: 'Sorry, insufficient Hive storage available',
    HIVE_ERROR_undefined: 'Network error, please try again',
    HIVE_ERROR_URL: 'Failed to get hive url bound by did'
  },
  EidtchannelPage: {
    title: 'Edit Channel Info',
    des: 'Prompt Box',
    des1: 'This channel is already public on the Explore Feeds and needs to unpublic from the Explore Feeds before it can be edited.',
    des2: 'This channel is already a collection and is public on the  Explore Feeds. It needs to unpublic from the  Explore Feeds and the collection can only be edited after deleting the collection.',
    des3: 'This channel is already a collection, you need to delete the collection before it can be edited.',
  },
  EditPostPage: {
    title: 'Edit Post',
  },
  EditCommentPage: {
    title: 'Edit Comment',
    saveChanges: 'Save changes',
    notModifiedYet: 'You have not modified the content of your comment.',
  },
  SettingsPage: {
    devmode: 'Developer Mode',
    cleandata: 'Clear Data',
    des: 'Are you sure you want to clear the data?',
    des1: 'Data cleared successfully',
    hidedeletepost: 'Display Deleted Posts',
    hidedeletecomment: 'Display Deleted Comments',
    // hideOfflinefeed: 'Display online Channels only',
    on: 'On',
    off: 'Off',
    'language-setting': 'Language',
    darkMode: 'Theme',
    drak: 'Dark',
    light: 'Light',
    'elastos-api-provider': 'API Provider',
    'elastos-api-provider-des': 'Elastos & IPFS API provider',
    'elastos-io-des': 'Gelaxy',
    'trinity-tech-cn-des': 'Trinity Tech',
    'ipfs-provider': 'IPFS API Provider',
    'ipfs0-provider-des': 'Primary gateway',
    'ipfs1-provider-des': 'Secondary gateway',
    'ipfs2-provider-des': 'Tertiary gateway',
    'assistPasar-provider': 'Assist API provider',
    /*********** Elastos API provider page ***********/
    elastosapiprovider: 'API Provider',
    'developer-setting': 'Developer Options',
    'advanced-setting': 'Advanced Settings',
    'configure-network': 'Active Network',
    'choose-network': 'Choose Network',
    'setPasarListGrid': 'List view - Pasar',
    hideAdult: 'Safe Mode',
    appPreferences: 'App Preferences',
    appPreferencesDes: 'Manage app preferences',
    developer: 'Developer',
    developerDes: 'Environment settings',
    languageDes: 'Global language settings',
    apiProviderDes: 'Configure API provider',
    dataMigration: 'Data Migration',
    dataMigrationDes: 'Feeds Service to Hive vault',
    networkDes: 'Configure network',
    interfaceDes: 'Interface testing',
    interface: 'Interface',
    databaseCollections: 'Database Collections',
    databaseCollectionsDes: 'Delete all collections',
    connections: 'Connections',
    connectionsDes: 'Manage account connections'
  },
  // DiscoverfeedPage: {
  //   title: 'Discovery Square',
  //   emptyDes: 'There are no public Channels',
  // },
  DiscoverfeedinfoPage: {
    title: 'Channel Details',
    feeds: 'Name',
    follow: 'Subscribe',
    unfollow: 'Subscribing',
    processing: 'Processing',
    feedsQrcode: 'Channel QR Code',
  },
  FeedinfoPage: {
    title: 'Channel Details',
    feeds: 'Channel',
    updatetime: 'Update time',
  },
  CommentlistPage: {
    title: 'Comment View',
    replydeleted: '(reply deleted)',
    editreply: 'Edit Reply',
    deletereply: 'Delete Reply',
  },
  FeedspreferencesPage: {
    title: 'Channel Preferences',
    des: 'Show in Explore Feeds',
    des1: 'Publish Collectible to Channel',
    des2: 'Create channel collection'
  } /***NFT*/,
  MintnftPage: {
    title: 'Create Collectible',
    nftAsset: 'Asset',
    nftAssetPlaceholder: 'Add asset',
    nftName: 'Name',
    nftNamePlaceholder: 'Add name',
    nftDescription: 'Description',
    nftDescriptionPlaceholder: 'Add description',
    putOnSale: 'Put on Sale',
    nftType: 'Type',
    single: 'Single',
    multiple: 'Multiple',
    nftRoyalties: 'Royalties',
    nftRoyaltiesPlaceholder: 'Enter royalties (suggested: 10%)',
    nftQuantity: 'Quantity',
    nftQuantityPlaceholder: 'Enter quantity',
    create: 'Create',
    nftAmount: 'Amount',
    nftFixedAmount: 'Enter fixed amount',
    nftMinimumAmount: 'Enter minimum amount',
    nftSellMethod: 'Sell Method',
    nftfixedPrice: 'Fixed Price',
    nfthighestBid: 'Highest Bid',
    nftExpirationDate: 'Expiration Date',
    nftExpirationDateDes: 'Choose expiration date',
    priceErrorMsg: 'The sale price should be higher than 0',
    priceErrorMsg1: 'New sale price should be different from existing sale price',
    royaltiesErrorMsg: 'Royalties value should be integer between 0 and 15%',
    quantityErrorMsg: 'Quantity value must be integer greater than 0',
    quantityErrorMsg1: 'Quantity integer cannot exceed the maximum value',
    fileTypeDes: 'File types supported: ',
    avatar: 'Avatar',
    fileTypeDes1: 'Canvas size must be 600x600 pixels',
    fileTypeDes2: 'Maximum size: 5 MB',
    fileTypeDes3: 'Recommended GIF animation length: Less than 10 seconds',
    general: 'General',
    assetType: 'Asset Type',
    adult: 'Explicit & Sensitive Content',
    video: 'video',
    fileTypeDes4: 'File types supported:',
    fileTypeDes5: 'Video playback length exceeds 60-minute limit',
    audio: 'audio',
    fileTypeDes6: 'File types supported:',
  },
  AssetdetailsPage: {
    title: 'Collectible Details',
    asset: 'Asset',
    contractDetails: 'Contract Details',
    owner: 'Owner',
    name: 'Name',
    description: 'Description',
    quantity: 'Quantity',
    dateCreated: 'Created Date',
    stickerContractAddress: 'Minting Contract Address',
    pasarContractAddress: 'Marketplace Contract Address',
    tokenID: 'Token ID',
    purchaseInfo: 'Purchase Info',
    creator: 'Creator',
    datePurchased: 'Date Purchased',
    price: 'Price',
    currency: 'Currency',
    type: 'Type',
    burn: 'Burn',
    history: 'History',
    contract: 'Contract',
    state: 'State',
    priceErrorMsg: 'The selling price cannot be negative',
    royalties: 'Royalties',
    saleType: 'Sale Type',
    firstSale: 'Primary Sale',
    secondarySale: 'Secondary Sale',
    dateoNMarket: 'Date on Market',
    pasarExplorer: 'See more details on Pasar Explorer'
  },
  BidPage: {
    title: 'Collectible Details',
    blockchain: 'Blockchain',
    buy: 'Buy',
    myBid: 'My Bid',
    bid: 'Bid',
    bidPlaceholder: 'Enter bid amount',
    minimumBid: 'Minimum Bid',
    currentBid: 'Current Bid',
    changePrice: 'Update Price',
    cancelOrder: 'Cancel Sale',
    des: 'Please confirm Creator Address before making a purchase',
    verifiedCreator: 'Creator',
    verified: '(Verified)'
  },
  CollectionsPage: {
    title: 'Collectibles',
    created: 'Created',
    purchased: 'Purchased',
    likes: 'Likes',
    emptylikes: 'Give a like to collectible you like',
    emptypurchased: 'Go to buy collectibles',
    onSale: 'Sell Collectible',
    putOnSale: 'Put on Sale',
    price: 'Price',
    details: 'Details',
    sale: 'Sell'
  },
  // ConfirmationPage: {
  //   title: 'Confirmation',
  //   bidDes: 'Your bid has been placed!',
  //   purchaseDes: 'Your purchase is successful!',
  //   ok: 'OK',
  //   bidPlaced: 'Bid Placed!',
  //   congratulations: 'Congratulations!',
  // },
  ExplorefeedsPage: {
    pasar: 'Pasar Lite',
    // explorefeeds: 'Explore Feeds',
    // hotBids: 'Hot Bids',
    // latest: 'Latest',
    // new: 'New',
    // channels: 'Channels',
    // viewall: 'View all',
  },
  // CurrencyviewallPage: {
  //   title: 'Pasar (NFT Marketplace)',
  // },
  LearnmorePage: {
    title: 'Learn more',
    next: 'Next',
    skip: 'Skip',
  },
  // IntroducePage: {
  //   title: 'Bind service',
  //   des: '1/6',
  //   des1: 'What is Feeds Service?',
  //   des2: 'A service node to store data in your local device. You can download the latest version from the Feeds',
  //   des3: 'website',
  //   des4: '. You need to install and run Feeds Service to receive the QR code in order to bind the Publisher Account.',
  //   des5: 'This is how Feeds works as users with a Publisher Account can publish posts, create collectibles etc.',
  //   des6: 'Without a Publisher Account, users can only read posts but cannot publish or edit them.',
  //   des7: 'What is Publisher Account?',
  //   des8: 'An account to bind data to Feeds Service. Imagine if you are a book publisher, you have the permission to write, edit and publish books to the market while normal readers can only read and browse books in the bookstore.',
  //   next: 'OK',
  //   info: '#info',
  //   back: 'Back',
  // },
  // LearnpublisheraccountPage: {
  //   title: 'Bind service',
  //   hello: '#hello',
  //   des: 'Learn about Publisher Account',
  //   createNewPublisherAccount: 'Create New Publisher Account',
  //   bindExistingPublisherAccount: 'Bind Existing Publisher Account',
  //   continueWithoutPublisherAccount: 'Continue without Publisher Account',
  // },
  WalletteachPage: {
    title: 'Wallet',
    wallet: '#Wallet',
    connectWallet: 'Connect Wallet',
    introduce1:
      'Connect wallet to fully enjoy the Elastos Smart Contract chain (ESC) features on Feeds. Users now can also trade non-fungible tokens (NFTs) at the marketplace also known as Pasar.',
    introduce2: 'Connect Wallet',
    skip: 'Skip',
  },
  NftdisclaimerComponent: {
    title: 'Feeds Collectible Disclaimer',
    des: 'The Feeds team is not liable for any losses resulting from using services provided by Feeds Pasar (and its suppliers), including but not limited to direct, indirect, incidental, punitive, and incurred losses:',
    des1: '1. User errors, such as password loss, illegal transactions, personal information leakage, or incorrect address inputs, and more;',
    des2: '2. Data loss, damage, or server failure;',
    des3: '3. Loss caused by business interruption;',
    des4: '4. Vulnerabilities or any type of program problems such as wallets and smart contracts, and any other functional problems related to the blockchain or encrypted assets such as forks and technical node problems;',
    des5: '5. Any unauthorized third party activities, including but not limited to the use of viruses, phishing, brute force, or other attack methods on services or encrypted assets;',
    des6: '6. Losses caused by the use of the services of this platform include, but are not limited to, legal issues, contract liability issues, economic issues, etc.;',
    des7: '7. Any indirect, special, or incidental loss or damage caused by infringement (including negligence), breach of contract or any other reason, regardless of whether such losses or damages can be reasonably foreseen by the Feeds team, and regardless of whether the Feeds team has been notified of the possibilities of such losses or damages in advance.',
    des8: '8. Any other losses related to the services provided by the Feeds Parser platform that are not caused by the Feeds team;',
    des9: '9. The Feeds team does not make any explicit or implied guarantees for the use of the services of the Feeds Parser platform, including but not limited to: the applicability of the services provided by this platform, errors or omissions, continuity, accuracy, reliability, and applicability to a particular use. In addition, the Feeds team does not make any promises or guarantees regarding the validity, accuracy, correctness, reliability, quality, stability, completeness, or timeliness of the technology and information relating to the services provided by the Feeds Parser platform. Using the services provided by this platform is a personal choice taken by users at their own risk. The Feeds team does not make any explicit or implied guarantees regarding the market, value, or price of digital assets. Please be aware that the digital asset market is unstable, and the market can fluctuate or collapse at any time. Trading digital assets is a personal choice users take at their own risk, and users should be able to bear any potential losses independently.',
    des10: 'The Feeds team does not provide any evaluation or comments as to whether the services provided by Feeds Pasar (and its suppliers) comply with the laws and regulations or relevant policy requirements of any particular jurisdiction. It is strongly recommended that users strictly abide by the laws of their respective jurisdictions.'
  },
  NftavatarlistPage: {
    title: 'Collectible Avatar'
  },
  WhitelistPage: {
    title: 'Verified Creators'
  },
  AssistpasarPage: {
    title: 'Assist Pasar API',
    assistProviderDes: 'Secondary assist pasar service for reading data'
  },
  ProfilenftimagePage: {
    title: 'Select Collectibles'
  },
  ChannelcollectionsPage: {
    title: 'Channel Collections',
    openCollections: 'Open Collections',
    cancelPublicCollections: 'Cancel public collections'
  },
  GalleriachannelPage: {
    title: 'Channel Collections',
    publicGallericaFailed: 'Failed to publish to Explore Feeds',
    mintingData: 'Channel Collectible is being created',
    settingApproval: 'Waiting for authorization to delegate Collectible to Galleria',
    creatingOrder: 'Sale order for the Collectible is now being created',
    createOrderSuccess: 'Failed to create a sale order for the Collectible',
    createOrderFail: 'Failed to create a sale order for the Collectible',
    checkingCollectibleResult: 'Waiting for the Channel Collectible to take effect in the contract',
    mintSuccess: 'Channel NFT Collectible created',
    mintSuccessDesc: 'Congratulations, you channel collectible has been created successfully.',
    mintSuccessDesc1: 'Congratulations, you channel collectible has been created successfully. We recommend you to remove your original NFT on central square.',
  },
  ScanPage: {
    title: 'Scanner',
    noQrErr: 'No QR code was detected in the selected picture. Please try again.',
    scanErr: 'Something went wrong while scanning your selected picture. Please try again.',
    galleryErr: 'Something went wrong while accessing your photo library. Please try again.',
  },
  ApppreferencesPage: {
    title: 'App Preferences',
  },
  buyStorageSpaceDialog: {
    title: 'Insufficient Storage',
    noBuy: "Don't buy",
    buy: 'Buy'
  },
  toast: {
    linkageInvalidParams: 'The linkage is invalid or cannot be opened'
  },
  ConnectionsPage: {
    title: 'Connections',
    addConnection: 'Add Connection',
    addConnectionDes: 'Integrate new account',
    twitter: 'Twitter',
    connected: 'Connected'
  }
};